# This uses an action (crazy-max/ghaction-import-gpg) that assumes you set your
# private key in the `GPG_PRIVATE_KEY` secret and passphrase in the `PASSPHRASE`
# secret. If you would rather own your own GPG handling, please fork this action
# or use an alternative one for key handling.
#
# You will need to pass the `--batch` flag to `gpg` in your signing step
# in `goreleaser` to indicate this is being used in a non-interactive mode.
#
name: Release

on:
  workflow_dispatch:
  push:
    branches:
      - 'main'
      - 'devel'
    tags-ignore:
      - '**'

jobs:

  release:
    if: contains(github.event.head_commit.message, 'chore(release)') != true

    runs-on: ubuntu-latest
    steps:

      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # otherwise, you will failed to push refs to dest repo
          persist-credentials: false # otherwise, the token used is the GITHUB_TOKEN, instead of your personal token
          token: ${{ secrets.ROUTEROS_ACTIONS }}

      - name: Import GPG key
        id: import_gpg
        uses: crazy-max/ghaction-import-gpg@v6
        with:
          # These secrets will need to be configured for the repository:
          gpg_private_key: ${{ secrets.TERRAFORM_GPG_SIGNING_KEY }}
          passphrase: ${{ secrets.TERRAFORM_GPG_SIGN_KEY_PW }}

      - name: Release
        id: release
        uses: cycjimmy/semantic-release-action@v4
        with:
          extra_plugins: |
            "@semantic-release/changelog@6.0.2"
            "@semantic-release/commit-analyzer@9.0.2"
            "@semantic-release/exec@6.0.3"
            "@semantic-release/git@10.0.1"
            "@semantic-release/github@8.0.7"
            "@semantic-release/release-notes-generator@10.0.3"
            "conventional-changelog-conventionalcommits@5.0.0"
        env:
          GITHUB_TOKEN: ${{ secrets.ROUTEROS_ACTIONS }}
          GPG_FINGERPRINT: ${{ steps.import_gpg.outputs.fingerprint }}

      - name: Set up Go
        if: steps.release.outputs.new_release_published == 'true'
        uses: actions/setup-go@v5
        with:
          go-version: 1.21

      - name: Run GoReleaser
        if: steps.release.outputs.new_release_published == 'true'
        uses: goreleaser/goreleaser-action@v6
        with:
          version: latest
          args: release --clean
        env:
          GPG_FINGERPRINT: ${{ steps.import_gpg.outputs.fingerprint }}
          # GitHub sets this automatically
          GITHUB_TOKEN: ${{ secrets.ROUTEROS_ACTIONS }}
